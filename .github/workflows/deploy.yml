name: Deploy

on:
  push:
    branches:
    - deploy

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Build with dotnet
      run: dotnet build src

    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1.1.0
    - name: npm ci
      run: npm ci

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: cdk deploy
      run: npm run cdk -- deploy "*" --require-approval=never

    - name: Sync assets
      run: |
        BastionInstanceId=$(aws cloudformation describe-stacks --stack-name HtmlRendererAppStack --query "Stacks[0].Outputs[?ExportName=='BastionInstanceId`].OutputValue" --output text)
        AssetBucketName=$(aws cloudformation describe-stacks --stack-name HtmlRendererAppStack --query "Stacks[0].Outputs[?ExportName=='AssetBucketName`].OutputValue" --output text)
        aws ssm send-command --document-name "AWS-RunShellScript" --document-version "1" --targets '[{"Key":"InstanceIds","Values":["$BastionInstanceId"]}]' --parameters '{"workingDirectory":[""],"executionTimeout":["3600"],"commands":["aws s3 sync s3://$AssetBucketName /mnt/efs/fs1/assets"]}' --timeout-seconds 600 --max-concurrency "50" --max-errors "0"
